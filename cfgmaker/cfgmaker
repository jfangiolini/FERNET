#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Tue Feb  3 15:48:22 2015
#
import os
import wx
import wx.grid

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame2(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame2.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.Notebook1 = wx.Notebook(self, wx.ID_ANY)
        self.CommonPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.Chan0Status = wx.RadioBox(self.CommonPanel, wx.ID_ANY, _("Channel 0:"), choices=[_("on"), _("off")], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.Chan1Status = wx.RadioBox(self.CommonPanel, wx.ID_ANY, _("Channel 1:"), choices=[_("on"), _("off")], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.label_35 = wx.StaticText(self.CommonPanel, wx.ID_ANY, _("Number of molecules:"))
        self.spin_button_1 = wx.SpinButton(self.CommonPanel, wx.ID_ANY )
        self.grid_2 = wx.grid.Grid(self.CommonPanel, wx.ID_ANY, size=(1, 1))
        self.label_1 = wx.StaticText(self.CommonPanel, wx.ID_ANY, _("Fluorescence event (s)"))
        self.CommonKappa = wx.TextCtrl(self.CommonPanel, wx.ID_ANY, _("200e-9"))
        self.label_2 = wx.StaticText(self.CommonPanel, wx.ID_ANY, _("XY waist (um)"))
        self.CommonWXY = wx.TextCtrl(self.CommonPanel, wx.ID_ANY, _("0.2"))
        self.label_3 = wx.StaticText(self.CommonPanel, wx.ID_ANY, _("Z waist (um)"))
        self.CommonWZ = wx.TextCtrl(self.CommonPanel, wx.ID_ANY, _("1.0"))
        self.PointPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_4 = wx.StaticText(self.PointPanel, wx.ID_ANY, _("X center of PSF (um)"))
        self.PointShiftX = wx.TextCtrl(self.PointPanel, wx.ID_ANY, _("0.0"))
        self.label_5 = wx.StaticText(self.PointPanel, wx.ID_ANY, _("Y center of PSF (um)"))
        self.PointShiftY = wx.TextCtrl(self.PointPanel, wx.ID_ANY, _("0.0"))
        self.label_6 = wx.StaticText(self.PointPanel, wx.ID_ANY, _("Z center of PSF (um)"))
        self.PointShiftZ = wx.TextCtrl(self.PointPanel, wx.ID_ANY, _("0.0"))
        self.label_7 = wx.StaticText(self.PointPanel, wx.ID_ANY, _("Name prefix"))
        self.PointName = wx.TextCtrl(self.PointPanel, wx.ID_ANY, _("point"))
        self.MultiPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_8 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("Name prefix"))
        self.MultiName = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("multi"))
        self.label_9 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("Z center of PSF (um)"))
        self.MultiZ = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("0.0"))
        self.label_10 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("PSFs in X axis"))
        self.MultiNPSFX = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("5"))
        self.label_11 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("PSFs in Y axis"))
        self.MultiNPSFY = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("5"))
        self.label_12 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("Shift between PSFs in X axis"))
        self.MultiXShift = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("0.2"))
        self.label_13 = wx.StaticText(self.MultiPanel, wx.ID_ANY, _("Shift between PSFs in y axis"))
        self.MultiYShift = wx.TextCtrl(self.MultiPanel, wx.ID_ANY, _("0.2"))
        self.LinePanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_14 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Line dead time (s)"))
        self.LineDeadtime = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("0.001"))
        self.label_15 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("X center of line (um)"))
        self.LineXCenter = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("0.0"))
        self.label_16 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Y center of line (um)"))
        self.LineYCenter = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("0.0"))
        self.label_17 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Z center of line (um)"))
        self.LineZCenter = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("0.0"))
        self.label_18 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Number of columns"))
        self.LineColumns = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("15"))
        self.label_19 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Shift between columns (um)"))
        self.LineShift = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("0.2"))
        self.label_20 = wx.StaticText(self.LinePanel, wx.ID_ANY, _("Image name prefix"))
        self.LinePrefix = wx.TextCtrl(self.LinePanel, wx.ID_ANY, _("linescan"))
        self.ImagePanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_21 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Line dead time (s)"))
        self.ImageDeadtime = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("0.001"))
        self.label_22 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Image Z center (um)"))
        self.ImageZCenter = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("0.0"))
        self.label_23 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Pixel size (um)"))
        self.ImagePixel = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("0.05"))
        self.label_24 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Image width (pixels)"))
        self.ImageWidth = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("64"))
        self.label_25 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Image height (pixels)"))
        self.ImageHeight = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("64"))
        self.label_26 = wx.StaticText(self.ImagePanel, wx.ID_ANY, _("Image name prefix"))
        self.ImagePrefix = wx.TextCtrl(self.ImagePanel, wx.ID_ANY, _("image"))
        self.StackPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_27 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Line dead time (s)"))
        self.StackDeadtime = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("0.001"))
        self.label_28 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Pixel size (um)"))
        self.StackPixel = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("0.05"))
        self.label_29 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Image width (pixels)"))
        self.StackWidth = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("64"))
        self.label_30 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Image height (pixels)"))
        self.StackHeight = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("64"))
        self.label_31 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Image name prefix"))
        self.StackPrefix = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("image"))
        self.label_32 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Top Z Position (um)"))
        self.StackTopZ = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("1.0"))
        self.label_33 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Bottom Z Position (um)"))
        self.StackBottomZ = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("-1.0"))
        self.label_34 = wx.StaticText(self.StackPanel, wx.ID_ANY, _("Z step (um)"))
        self.StackStep = wx.TextCtrl(self.StackPanel, wx.ID_ANY, _("0.1"))
        self.SPIMPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_36 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Numerical aperture"))
        self.SpimNA = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("1.6"))
        self.label_37 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Emission wavelength (nm)"))
        self.SpimLambda = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("500.0"))
        self.label_38 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Axial waist (um)"))
        self.SpimWaist = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("0.5"))
        self.label_39 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Pixel size (um)"))
        self.SpimPixel = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("0.24"))
        self.label_40 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Image width (pixels)"))
        self.SpimWidth = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("64"))
        self.label_41 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Image height (pixels)"))
        self.SpimHeight = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("64"))
        self.label_42 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Image Z center (um)"))
        self.SpimZcenter = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("1.5"))
        self.label_43 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Frame time (s)"))
        self.SpimFramet = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("0.001"))
        self.label_44 = wx.StaticText(self.SPIMPanel, wx.ID_ANY, _("Image name"))
        self.SpimName = wx.TextCtrl(self.SPIMPanel, wx.ID_ANY, _("image"))
        self.OrbitalPanel = wx.Panel(self.Notebook1, wx.ID_ANY)
        self.label_45 = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("X center of orbit (um)"))
        self.OrbitXCenter = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("0.0"))
        self.label_45_copy = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("Y center of orbit (um)"))
        self.OrbitYCenter = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("0.0"))
        self.label_45_copy_copy = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("Z center of orbit (um)"))
        self.OrbitZCenter = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("0.0"))
        self.label_45_copy_copy_copy = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("Orbit radius (um)"))
        self.OrbitRadius = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("2.0"))
        self.label_45_copy_copy_copy_copy = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("Orbit period (s)"))
        self.OrbitPeriod = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("0.00064"))
        self.label_45_copy_copy_copy_copy_copy = wx.StaticText(self.OrbitalPanel, wx.ID_ANY, _("Image name prefix"))
        self.OrbitName = wx.TextCtrl(self.OrbitalPanel, wx.ID_ANY, _("orbital"))
        self.FilenameTextCtrl = wx.TextCtrl(self, wx.ID_ANY, "")
        self.WriteButton = wx.Button(self, wx.ID_ANY, _("Write File"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_SPIN_DOWN, self.SpinDwn, self.spin_button_1)
        self.Bind(wx.EVT_SPIN_UP, self.SpinUp, self.spin_button_1)
        self.Bind(wx.EVT_BUTTON, self.WriteFileButtonPressed, self.WriteButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame2.__set_properties
        self.SetTitle(_("CFGmaker"))
        self.SetSize((604, 521))
        self.Chan0Status.SetSelection(0)
        self.Chan1Status.SetSelection(1)
        self.label_35.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.grid_2.CreateGrid(1, 3)
        self.grid_2.SetColLabelValue(0, _("Name"))
        self.grid_2.SetColLabelValue(1, _("br0 (cpsm)"))
        self.grid_2.SetColLabelValue(2, _("br1 (cpsm)"))
        self.label_1.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_2.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_3.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_4.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_5.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_6.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_7.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_8.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_9.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_10.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_11.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_12.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_13.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_14.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_15.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_16.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_17.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_18.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_19.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_20.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_21.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_22.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_23.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_24.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_25.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_26.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_27.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_28.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_29.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_30.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_31.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_32.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_33.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_34.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_36.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_37.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_38.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_39.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_40.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_41.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_42.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_43.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_44.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45_copy.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45_copy_copy.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45_copy_copy_copy.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45_copy_copy_copy_copy.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_45_copy_copy_copy_copy_copy.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        # end wxGlade

        # 
        self.filename = os.getcwd() + "/fernet.cfg"
        self.FilenameTextCtrl.SetValue(self.filename)


    def __do_layout(self):
        # begin wxGlade: MyFrame2.__do_layout
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_2 = wx.FlexGridSizer(6, 2, 3, 3)
        grid_sizer_1 = wx.FlexGridSizer(9, 2, 3, 3)
        grid_sizer_8 = wx.FlexGridSizer(8, 2, 3, 3)
        grid_sizer_6 = wx.FlexGridSizer(6, 2, 3, 3)
        grid_sizer_5 = wx.FlexGridSizer(7, 2, 3, 3)
        grid_sizer_4 = wx.FlexGridSizer(6, 2, 3, 3)
        grid_sizer_3 = wx.FlexGridSizer(4, 2, 3, 3)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_7 = wx.FlexGridSizer(3, 2, 3, 3)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7.Add(self.Chan0Status, 0, 0, 0)
        sizer_7.Add(self.Chan1Status, 0, 0, 0)
        sizer_7.Add((40, 0), 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_7.Add(self.label_35, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_7.Add(self.spin_button_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_6.Add(sizer_7, 0, wx.EXPAND, 0)
        sizer_6.Add(self.grid_2, 1, wx.EXPAND, 0)
        grid_sizer_7.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.CommonKappa, 0, wx.EXPAND, 0)
        grid_sizer_7.Add(self.label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.CommonWXY, 0, wx.EXPAND, 0)
        grid_sizer_7.Add(self.label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_7.Add(self.CommonWZ, 0, wx.EXPAND, 0)
        grid_sizer_7.AddGrowableCol(1)
        sizer_6.Add(grid_sizer_7, 0, wx.EXPAND, 0)
        self.CommonPanel.SetSizer(sizer_6)
        grid_sizer_3.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.PointShiftX, 0, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.PointShiftY, 0, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.PointShiftZ, 0, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_7, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.PointName, 0, wx.EXPAND, 0)
        self.PointPanel.SetSizer(grid_sizer_3)
        grid_sizer_3.AddGrowableCol(1)
        grid_sizer_4.Add(self.label_8, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiName, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_9, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiZ, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_10, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiNPSFX, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_11, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiNPSFY, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_12, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiXShift, 0, wx.EXPAND, 0)
        grid_sizer_4.Add(self.label_13, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_4.Add(self.MultiYShift, 0, wx.EXPAND, 0)
        self.MultiPanel.SetSizer(grid_sizer_4)
        grid_sizer_4.AddGrowableCol(1)
        grid_sizer_5.Add(self.label_14, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineDeadtime, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_15, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineXCenter, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_16, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineYCenter, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_17, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineZCenter, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_18, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineColumns, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_19, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LineShift, 0, wx.EXPAND, 0)
        grid_sizer_5.Add(self.label_20, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_5.Add(self.LinePrefix, 0, wx.EXPAND, 0)
        self.LinePanel.SetSizer(grid_sizer_5)
        grid_sizer_5.AddGrowableCol(1)
        grid_sizer_6.Add(self.label_21, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImageDeadtime, 0, wx.EXPAND, 0)
        grid_sizer_6.Add(self.label_22, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImageZCenter, 0, wx.EXPAND, 0)
        grid_sizer_6.Add(self.label_23, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImagePixel, 0, wx.EXPAND, 0)
        grid_sizer_6.Add(self.label_24, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImageWidth, 0, wx.EXPAND, 0)
        grid_sizer_6.Add(self.label_25, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImageHeight, 0, wx.EXPAND, 0)
        grid_sizer_6.Add(self.label_26, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_6.Add(self.ImagePrefix, 0, wx.EXPAND, 0)
        self.ImagePanel.SetSizer(grid_sizer_6)
        grid_sizer_6.AddGrowableCol(1)
        grid_sizer_8.Add(self.label_27, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackDeadtime, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_28, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackPixel, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_29, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackWidth, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_30, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackHeight, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_31, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackPrefix, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_32, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackTopZ, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_33, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackBottomZ, 0, wx.EXPAND, 0)
        grid_sizer_8.Add(self.label_34, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_8.Add(self.StackStep, 0, wx.EXPAND, 0)
        self.StackPanel.SetSizer(grid_sizer_8)
        grid_sizer_8.AddGrowableCol(1)
        grid_sizer_1.Add(self.label_36, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimNA, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_37, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimLambda, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_38, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimWaist, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_39, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimPixel, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_40, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimWidth, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_41, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimHeight, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_42, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimZcenter, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_43, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimFramet, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_44, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add(self.SpimName, 0, wx.EXPAND, 0)
        self.SPIMPanel.SetSizer(grid_sizer_1)
        grid_sizer_1.AddGrowableCol(1)
        grid_sizer_2.Add(self.label_45, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitXCenter, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_45_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitYCenter, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_45_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitZCenter, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_45_copy_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitRadius, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_45_copy_copy_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitPeriod, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_45_copy_copy_copy_copy_copy, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.OrbitName, 0, wx.EXPAND, 0)
        self.OrbitalPanel.SetSizer(grid_sizer_2)
        grid_sizer_2.AddGrowableCol(1)
        self.Notebook1.AddPage(self.CommonPanel, _("Common"))
        self.Notebook1.AddPage(self.PointPanel, _("Point"))
        self.Notebook1.AddPage(self.MultiPanel, _("Multi"))
        self.Notebook1.AddPage(self.LinePanel, _("Line"))
        self.Notebook1.AddPage(self.ImagePanel, _("Image"))
        self.Notebook1.AddPage(self.StackPanel, _("Stack"))
        self.Notebook1.AddPage(self.SPIMPanel, _("SPIM"))
        self.Notebook1.AddPage(self.OrbitalPanel, _("Orbital"))
        sizer_3.Add(self.Notebook1, 1, wx.EXPAND, 0)
        sizer_5.Add(self.FilenameTextCtrl, 1, 0, 0)
        sizer_5.Add(self.WriteButton, 0, wx.ALIGN_RIGHT, 0)
        sizer_4.Add(sizer_5, 0, wx.ALIGN_BOTTOM | wx.EXPAND, 0)
        sizer_3.Add(sizer_4, 0, wx.ALIGN_BOTTOM | wx.EXPAND, 0)
        self.SetSizer(sizer_3)
        self.Layout()
        # end wxGlade

    def WriteFileButtonPressed(self, event):  # wxGlade: MyFrame2.<event_handler>
        f = open(self.filename,"w")
        nrows = self.grid_2.GetNumberRows()
        cur_row = 0
        molNames = []
        molBright0 = []
        molBright1 = []

        while cur_row < nrows:
            molNames.append(self.grid_2.GetCellValue(cur_row,0))
            molBright0.append(self.grid_2.GetCellValue(cur_row,1))
            molBright1.append(self.grid_2.GetCellValue(cur_row,2))
            cur_row = cur_row + 1

        # Parse common block
        f.write("common: \n")
        f.write("{\n")
        f.write("   channel0: \n")
        f.write("   {\n")

        if self.Chan0Status.GetSelection() == 0:
            f.write("       on = 1;\n")
        else:
            f.write("       on = 0\n")
        f.write("       molec = (")

        cur_row = 0
        while cur_row < nrows:
            f.write("\"" + molNames[cur_row] + "\"")
            cur_row = cur_row + 1
            if cur_row == nrows:
                f.write(");\n")
            else:
                f.write(",")

        f.write("       bright = (")
        cur_row = 0
        while cur_row < nrows:
            f.write(molBright0[cur_row])
            cur_row = cur_row + 1
            if cur_row == nrows:
                f.write(");\n")
            else:
                f.write(",")
        f.write("   };\n\n")

        f.write("   channel1: \n")
        f.write("   {\n")

        if self.Chan1Status.GetSelection() == 0:
            f.write("       on = 1;\n")
        else:
            f.write("       on = 0\n")
        f.write("       molec = (")

        cur_row = 0
        while cur_row < nrows:
            f.write("\"" + molNames[cur_row] + "\"")
            cur_row = cur_row + 1
            if cur_row == nrows:
                f.write(");\n")
            else:
                f.write(",")

        f.write("       bright = (")
        cur_row = 0
        while cur_row < nrows:
            f.write(molBright1[cur_row])
            cur_row = cur_row + 1
            if cur_row == nrows:
                f.write(");\n")
            else:
                f.write(",")
        f.write("   };\n\n")

        f.write("   kappa = " + self.CommonKappa.GetValue() + ";\n")
        f.write("   w_xy  = " + self.CommonWXY.GetValue() + ";\n")
        f.write("   w_z   = " + self.CommonWZ.GetValue() + ";\n")
        f.write("};\n\n")

        # Parse point block

        f.write("point: \n")
        f.write("{\n")
        f.write("   shiftx = " + self.PointShiftX.GetValue() + ";\n")
        f.write("   shifty = " + self.PointShiftY.GetValue() + ";\n")
        f.write("   shiftz = " + self.PointShiftZ.GetValue() + ";\n")
        f.write("   prefix = " + "\"" + self.PointName.GetValue() + "\";\n")
        f.write("};\n\n")

        # Parse multi mode

        f.write("multi: \n")
        f.write("{\n")
        f.write("   prefix = " + "\"" + self.MultiName.GetValue() + "\";\n")
        f.write("   shiftz = " + self.MultiZ.GetValue() + ";\n")
        f.write("   nPSFX  = " + self.MultiNPSFX.GetValue() + ";\n")
        f.write("   dx     = " + self.MultiXShift.GetValue() + ";\n")
        f.write("   nPSFY  = " + self.MultiNPSFY.GetValue() + ";\n")
        f.write("   dy     = " + self.MultiYShift.GetValue() + ";\n")
        f.write("};\n\n")

        # Parse line mode

        f.write("line: \n")
        f.write("{\n")
        f.write("   deadtime  = " + self.LineDeadtime.GetValue() + ";\n")
        f.write("   centerx   = " + self.LineXCenter.GetValue() + ";\n")
        f.write("   centery   = " + self.LineYCenter.GetValue() + ";\n")
        f.write("   centerz   = " + self.LineZCenter.GetValue() + ";\n")
        f.write("   n_columns = " + self.LineColumns.GetValue() + ";\n")
        f.write("   shift     = " + self.LineShift.GetValue() + ";\n")
        f.write("   tiffname  = " + "\"" + self.LinePrefix.GetValue() + "\";\n")
        f.write("};\n\n")

        # Parse image mode

        f.write("image: \n")
        f.write("{\n")
        f.write("   deadtime = " + self.ImageDeadtime.GetValue() + ";\n")
        f.write("   centerz  = " + self.ImageZCenter.GetValue() + ";\n")
        f.write("   pixel    = " + self.ImagePixel.GetValue() + ";\n")
        f.write("   width    = " + self.ImageWidth.GetValue() + ";\n")
        f.write("   height   = " + self.ImageHeight.GetValue() + ";\n")
        f.write("   tiffname = " + "\"" + self.ImagePrefix.GetValue() + "\";\n")
        f.write("};\n\n")

        # Parse stack mode

        f.write("stack: \n")
        f.write("{\n")
        f.write("   deadtime = " + self.StackDeadtime.GetValue() + ";\n")
        f.write("   pixel    = " + self.StackPixel.GetValue() + ";\n"   )
        f.write("   width    = " + self.StackWidth.GetValue() + ";\n"     )
        f.write("   height   = " + self.StackHeight.GetValue() + ";\n"     )
        f.write("   tiffname = " + "\"" + self.StackPrefix.GetValue() + "\";\n")
        f.write("   top_z    = " + self.StackTopZ.GetValue() + ";\n"       )
        f.write("   bot_z    = " + self.StackBottomZ.GetValue() + ";\n")
        f.write("   step     = " + self.StackStep.GetValue() + ";\n"       )
        f.write("};\n\n")

        # Parse SPIM mode
        f.write("spim: \n")
        f.write("{\n")
        f.write("   NA       = " + self.SpimNA.GetValue() + ";\n")
        f.write("   lambda   = " + self.SpimLambda.GetValue() + ";\n")
        f.write("   waist    = " + self.SpimWaist.GetValue() + ";\n")
        f.write("   pixel    = " + self.SpimPixel.GetValue() + ";\n")
        f.write("   width    = " + self.SpimWidth.GetValue() + ";\n")
        f.write("   height   = " + self.SpimHeight.GetValue() + ";\n")
        f.write("   centerz  = " + self.SpimZcenter.GetValue() + ";\n")
        f.write("   frame_t  = " + self.SpimFramet.GetValue() + ";\n")
        f.write("   tiffname = " + "\"" + self.SpimName.GetValue() + "\";\n")
        f.write("}\n\n")

        # Parse orbital mode
        f.write("orbital: \n") 
        f.write("{\n")
        f.write("   centerx   = " + self.OrbitXCenter.GetValue() + ";\n")
        f.write("   centery   = " + self.OrbitYCenter.GetValue() + ";\n")
        f.write("   centerz   = " + self.OrbitZCenter.GetValue() + ";\n")
        f.write("   radius    = " + self.OrbitRadius.GetValue() + ";\n")
        f.write("   period    = " + self.OrbitPeriod.GetValue() + ";\n")
        f.write("   tiffname  = " + "\"" + self.OrbitName.GetValue() + "\";\n")
        f.write("}\n\n")

        print(self.filename + " successfully written!")
        f.close()
        event.Skip()


    def SpinDwn(self, event):  # wxGlade: MyFrame2.<event_handler>
        self.grid_2.DeleteRows(1)
    def SpinUp(self, event):  # wxGlade: MyFrame2.<event_handler>
        self.grid_2.AppendRows(1)
# end of class MyFrame2
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_3 = MyFrame2(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_3)
    frame_3.Show()
    app.MainLoop()